#importing math functions
import math
 
#importing tkinter
import tkinter as t
 
#importing all functions of tkinter
from tkinter import *
 
#creating a window
cal = t.Tk ()
 
#naming window
cal.title("Calculator")
 
#to set the calculator background colour
cal.configure(background = "gold")
 
#to create input text box
e = Entry(cal, width=45, borderwidth=4)
e.grid(row=0, column=0, columnspan=5, padx=10, pady=10)
 
#to create buttons; insert whatever the number onto the screen; enter the number once without repeating it again with the new number added; put the numbers together in order
def button_click(number):
    current = e.get()
    e.delete(0, END)
    e.insert(0, current + number)
 
#creating a clear button, to delete the previous entry
def button_clear():
    e.delete(0, END)
 
#creating similar button to clear
def button_erase():
    e.delete(0, END)
 
#creating a backspace button;
'''def button_backspace(num):
    current=e.get()[:-1]
    e.delete(0,END)
    e.insert(0,current)
 
def button_backspace(self):
    text = text_box.get()[:-1]
    if text == "":
        text = "0"
    self.current = text
    self.display( text )'''
             
   
#creating a addition mathematical operation button;
def button_addition():
    first_number = e.get()
    global f_num
    global mat
    mat = "addition"
    f_num = int(first_number)
    e.delete(0, END)
   
#creating a subtraction mathematical operation button;
def button_subtraction():
    first_number = e.get()
    global f_num
    global mat
    mat = "subtraction"
    f_num = int(first_number)
    e.delete(0, END)
 
#creating a multiplication mathematical operation button;
def button_multiplication():
    first_number = e.get()
    global f_num
    global mat
    mat = "multiplication"
    f_num = int(first_number)
    e.delete(0, END)
 
#creating a division mathematical operation button;
def button_division():
    first_number = e.get()
    global f_num
    global mat
    mat = "division"
    f_num = int(first_number)
    e.delete(0, END)  
 
#creating squareroot button
def button_squareroot():
    first_number = e.get()
    global f_num
    global mat
    mat = "math.sqrt"
    f_num = int(first_number)
    e.delete(0, END)      
   
#creating square button
def button_square():
    first_number = e.get()
    global f_num
    global mat
    mat = "math.pow"
    f_num = int(first_number)
    e.delete(0, END)
 
#creating sin button
def button_sin():
    first_number = e.get()
    global f_num
    global mat
    mat = "math.sin"
    f_num = int(first_number)
    e.delete(0, END)
   
#creating cos button
def button_cos():
    first_number = e.get()
    global f_num
    global mat
    mat = "math.cos"
    f_num = int(first_number)
    e.delete(0, END)
   
#creating tan button
def button_tan():
    first_number = e.get()
    global f_num
    global mat
    mat = "math.tan"
    f_num = int(first_number)
    e.delete(0, END)    
 
'''def button_decimal():
    first_number = e.get()
    global f_num
    global mat
    mat = "decimal"
    f_num = int(first_number)
    e.delete(0, END)'''
   
#defining equal sign as well as the operators and what to operate depending on the input math function
def button_equal():
    second_number = e.get()
    e.delete(0, END)
   
    if mat == "addition":
        e.insert(0, f_num + int(second_number))
       
    if mat == "subtraction":
        e.insert(0, f_num - int(second_number))
       
    if mat == "multiplication":
        e.insert(0, f_num * int(second_number))
       
    if mat == "division":
        e.insert(0, f_num / int(second_number))
   
    if mat == "math.sqrt":
        e.insert(0, math.sqrt(f_num))
   
    if mat == "math.pow":
        e.insert(0, math.pow(f_num,2))
       
    if mat == "math.sin":
        e.insert(0, math.sin(f_num))
       
    if mat == "math.cos":
        e.insert(0, math.cos(f_num))
       
    if mat == "math.tan":
        e.insert(0, math.tan(f_num))
   
    '''if mat == "decimal":
        e.insert(0, f_num . int(second_number))'''  
 
#creating the button meaning labeling it sizing it and making it clickable the actual button function is defined above  
button_0 = Button(cal, text="0", padx=40, pady=10, command=lambda: button_click("0"))
button_1 = Button(cal, text="1", padx=40, pady=10, command=lambda: button_click("1"))
button_2 = Button(cal, text="2", padx=40, pady=10, command=lambda: button_click("2"))
button_3 = Button(cal, text="3", padx=43, pady=10, command=lambda: button_click("3"))
button_4 = Button(cal, text="4", padx=40, pady=10, command=lambda: button_click("4"))
button_5 = Button(cal, text="5", padx=40, pady=10, command=lambda: button_click("5"))
button_6 = Button(cal, text="6", padx=43, pady=10, command=lambda: button_click("6"))
button_7 = Button(cal, text="7", padx=40, pady=10, command=lambda: button_click("7"))
button_8 = Button(cal, text="8", padx=40, pady=10, command=lambda: button_click("8"))
button_9 = Button(cal, text="9", padx=43, pady=10, command=lambda: button_click("9"))
 
button_equal = Button(cal, text="=", padx=91, pady=10, command=button_equal)
button_clear = Button(cal, text="CE", padx=92, pady=10, command=button_clear)
button_erase = Button(cal, text="C", padx=87, pady=10, command=button_erase)
'''button_decimal = Button(cal, text=".", padx=42, pady=10, command=button_decimal)
button_backspace = Button(cal, text="Backspace", padx=10, pady=10, command=button_backspace)'''
 
button_add = Button(cal, text="+", padx=46, pady=10, command=button_addition)
button_subtract = Button(cal, text="-", padx=47, pady=10, command=button_subtraction)
button_multiply = Button(cal, text="*", padx=47, pady=10, command=button_multiplication)
button_divide = Button(cal, text="/", padx=48, pady=10, command=button_division)
 
button_squareroot = Button(cal, text="âˆš", padx=49, pady=10, command=button_squareroot)
button_square = Button(cal, text="^2", padx=46, pady=10, command=button_square)
 
button_sin = Button(cal, text="sin", padx=44, pady=10, command=button_sin)
button_cos = Button(cal, text="cos", padx=42, pady=10, command=button_cos)
button_tan = Button(cal, text="tan", padx=43, pady=10, command=button_tan)
 
#to put buttons on the screen
button_erase.grid(row=1, column=0, columnspan=2)
button_squareroot.grid(row=5, column=4)
button_square.grid(row=1, column=4)
'''button_decimal.grid(row=5, column=1)
button_backspace.grid(row=6, column=2)'''
 
button_7.grid(row=2, column=0)
button_8.grid(row=2, column=1)
button_9.grid(row=2, column=2)
button_add.grid(row=2, column=3)
button_sin.grid(row=2, column=4)
 
button_4.grid(row=3, column=0)
button_5.grid(row=3, column=1)
button_6.grid(row=3, column=2)
button_subtract.grid(row=3, column=3)
button_cos.grid(row=3, column=4)
 
button_1.grid(row=4, column=0)
button_2.grid(row=4, column=1)
button_3.grid(row=4, column=2)
button_multiply.grid(row=4, column=3)
button_tan.grid(row=4, column=4)
 
button_0.grid(row=5, column=0)
button_equal.grid(row=5, column=1, columnspan=2)
button_clear.grid(row=1, column=2, columnspan=2)
button_divide.grid(row=5, column=3)
 
#-------------------------to create a menubar;----------------------------------
 
#defining exit option in menu; to make calculator close
def Exit ():
    cal.destroy()  
   
#to view the standard calculator    
def Standard_Calculator():
    cal.geometry("385x250")
 
#to view the scientifc calculator    
def Scientific_Calculator():
    cal.geometry("490x250")
 
menubar = Menu(e)
 
#to create menu options
filemenu = Menu(menubar)
menubar.add_cascade(label= "Menu", menu=filemenu)
filemenu.add_command(label = "Standard Calculator", command = Standard_Calculator)
filemenu.add_command(label = "Scientific Calculator", command = Scientific_Calculator)
filemenu.add_command(label = "Exit", command = Exit)
 
cal.config(menu=menubar)
 
 
cal.mainloop()
 

